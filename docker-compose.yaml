version: '3.9'

services:
  nginx:
    container_name: nginx_billing
    build:
      context: ./nginx
    ports:
      - "80:80"
    depends_on:
      - subscription_app

  postgres:
    container_name: postgres
    image: postgres:15.0
    restart: always
    env_file:
      - docker/postgres/.env
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data

  processor:
    container_name: processor
    build:
      context: .
      dockerfile: docker/processor/Dockerfile
    depends_on:
      - postgres

  saver:
    container_name: saver
    build:
      context: .
      dockerfile: docker/saver/Dockerfile
    depends_on:
      - broker
      - postgres

  subscription_app:
    container_name: subscription_app
    build:
      context: .
      dockerfile: docker/subscription_app/Dockerfile
    depends_on:
      - broker

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    hostname: broker
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

networks:
   default:
     name: billing_network
